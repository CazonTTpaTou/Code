########################################################################################################################
########################################################################################################################
########################################################################################################################

# import package with helper functions 
import bq_helper

# create a helper object for this dataset
accidents = bq_helper.BigQueryHelper(active_project="bigquery-public-data",
                                   dataset_name="nhtsa_traffic_fatalities")

# query to find out the number of accidents which 
# happen on each day of the week
query = """SELECT COUNT(consecutive_number), 
                  EXTRACT(DAYOFWEEK FROM timestamp_of_crash)
            FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`
            GROUP BY EXTRACT(DAYOFWEEK FROM timestamp_of_crash)
            ORDER BY COUNT(consecutive_number) DESC
        """

accidents_by_day = accidents.query_to_pandas_safe(query)

# library for plotting
import matplotlib.pyplot as plt

# make a plot to show that our data is, actually, sorted:
plt.plot(accidents_by_day.f0_)
plt.title("Number of Accidents by Rank of Day \n (Most to least dangerous)")

########################################################################################################################
Questions
1) Which hours of the day do the most accidents occur during?

Return a table showing how many accidents occurred in each hour of the day in 2015, sorted by the the number of accidents 
which occurred each hour. Use either the accident_2015 or accident_2016 table for this, and the timestamp_of_crash column 
(there is an hour_of_crash column, but if you use that one you won't get a chance to practice with dates).
########################################################################################################################

# import package with helper functions 
import bq_helper

# create a helper object for this dataset
accidents = bq_helper.BigQueryHelper(active_project="bigquery-public-data",
                                   dataset_name="nhtsa_traffic_fatalities")

# query to find out the number of accidents which 
# happen on each day of the week
query = """SELECT COUNT(consecutive_number), 
                  EXTRACT(HOUR FROM timestamp_of_crash)
            FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`
            GROUP BY EXTRACT(HOUR FROM timestamp_of_crash)
            ORDER BY COUNT(consecutive_number) DESC
        """

accidents_by_hour = accidents.query_to_pandas_safe(query)

# library for plotting
import matplotlib.pyplot as plt

# make a plot to show that our data is, actually, sorted:
plt.plot(accidents_by_hour.f0_)
plt.title("Number of Accidents by Rank of Hour \n (Most to least dangerous)")

########################################################################################################################
2) Which state has the most hit and runs?

Return a table with the number of vehicles registered in each state that were involved in hit-and-run accidents, 
sorted by the number of hit and runs. Use either the vehicle_2015 or vehicle_2016 table for this, 
especially the registration_state_name and hit_and_run columns (it may be helpful to view the hit_and_run column to understand its contents).

########################################################################################################################


# create a helper object for this dataset
accidents = bq_helper.BigQueryHelper(active_project="bigquery-public-data",
                                   dataset_name="nhtsa_traffic_fatalities")

query = """SELECT state_name,count(state_name)
            FROM `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015`
            GROUP BY state_name
            ORDER BY count(state_name) DESC
            ;
        """

accidents_state = accidents.query_to_pandas_safe(query)
accidents_state

