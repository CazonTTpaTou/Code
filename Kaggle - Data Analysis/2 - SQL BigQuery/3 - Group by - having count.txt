###############################################################################################################
#### 1) How many stories (use the "id" column) are there of each type (in the "type" column) in the full table?
###############################################################################################################

query = """SELECT type, COUNT(type) AS `Nombre`
            FROM `bigquery-public-data.hacker_news.full`
            GROUP BY type
            """
type_comments = hacker_news.query_to_pandas_safe(query)

type_comments

###############################################################################################################
#### 2) How many comments have been deleted? (If a comment was deleted the "deleted" column in the comments table will have the value "True".)
###############################################################################################################

query = """SELECT type, COUNT(type) AS `Nombre`
            FROM `bigquery-public-data.hacker_news.full`
            GROUP BY type,deleted
            HAVING  STARTS_WITH(type, "comment") and deleted = True
            """
number_deleted = hacker_news.query_to_pandas_safe(query)

number_deleted

###############################################################################################################
#### 3) Modify one of the queries you wrote above to use a different aggregate function.
###############################################################################################################

query = """
	SELECT COUNTIF(STARTS_WITH(type, "comment")=True) AS `Nombre`
	FROM `bigquery-public-data.hacker_news.full`
	WHERE deleted = True
            """

number_deleted = hacker_news.query_to_pandas_safe(query)

number_deleted

