###############################################################################################################################################
Exercise 1: region_1 and region_2 are pretty uninformative names for locale columns in the dataset. Rename these columns to region and locale.
###############################################################################################################################################

reviews.rename(columns={'region_1': 'region','region_2':'locale'})

###############################################################################################################################################
**Exercise 2**: Set the index name in the dataset to `wines`.
###############################################################################################################################################

reviews.rename_axis("wines",axis=0)

###############################################################################################################################################
Exercise 3: The Things on Reddit dataset includes product links from a selection of top-ranked forums ("subreddits") on Reddit.com. Create a DataFrame of products mentioned on either subreddit. Use the following data:
###############################################################################################################################################

gaming_products = pd.read_csv("../input/things-on-reddit/top-things/top-things/reddits/g/gaming.csv")
gaming_products['subreddit'] = "r/gaming"
movie_products = pd.read_csv("../input/things-on-reddit/top-things/top-things/reddits/m/movies.csv")
movie_products['subreddit'] = "r/movies"

pd.concat([gaming_products, movie_products])

###############################################################################################################################################
**Exercise 4**: The [Powerlifting Database](https://www.kaggle.com/open-powerlifting/powerlifting-database) dataset on Kaggle includes one CSV table for powerlifting meets and a separate one for powerlifting competitors. Both tables include references to a `MeetID`, a unique key for each meet (competition) included in the database. Using this, generate a dataset combining the two tables into one. Use the following data:
###############################################################################################################################################

powerlifting_meets = pd.read_csv("../input/powerlifting-database/meets.csv")
powerlifting_competitors = pd.read_csv("../input/powerlifting-database/openpowerlifting.csv")

new_table = powerlifting_competitors.join(powerlifting_meets,lsuffix='_comp', rsuffix='_meet')  

powerlifting_meets.set_index("MeetID").join(powerlifting_competitors.set_index("MeetID"))




